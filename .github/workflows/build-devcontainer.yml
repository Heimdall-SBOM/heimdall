name: Build DevContainer Image


# Security: All actions are pinned to specific commit SHAs to prevent supply chain attacks
# Update SHAs periodically or use tools like Dependabot to manage them automatically

on:
  push:
    paths:
      - '.devcontainer/Dockerfile'
      - '.github/workflows/build-devcontainer.yml'
  workflow_dispatch:
    inputs:
      registry:
        description: 'Container registry (ghcr.io or docker.io)'
        required: false
        default: 'ghcr.io'
        type: choice
        options:
        - ghcr.io
        - docker.io
      namespace:
        description: 'Registry namespace/username'
        required: false
        default: 'heimdall-sbom'
      image_tag:
        description: 'Image tag'
        required: false
        default: 'latest'

# Permissions needed for container operations
permissions:
  contents: write      # Push commits with digest tracking updates
  packages: write      # Push to GHCR
  pull-requests: write # Comment on PRs

env:
  REGISTRY: ${{ github.event.inputs.registry || 'ghcr.io' }}
  NAMESPACE: ${{ github.event.inputs.namespace || 'heimdall-sbom' }}
  IMAGE_TAG: ${{ github.event.inputs.image_tag || 'latest' }}
  DOCKER_IMAGE: ${{ github.event.inputs.registry || 'ghcr.io' }}/${{ github.event.inputs.namespace || 'heimdall-sbom' }}/heimdall-devcontainer:${{ github.event.inputs.image_tag || 'latest' }}


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code

        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Login to Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY == 'ghcr.io' && github.actor || secrets.DOCKER_USERNAME }}
          password: ${{ env.REGISTRY == 'ghcr.io' && secrets.GITHUB_TOKEN || secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@16ebe778df0e7752d2cfcbd924afdbbd89c1a755 # v6.6.1
        with:
          context: .
          file: ./.devcontainer/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Update devcontainer.json
        if: github.event.inputs.image_tag
        run: |
          # Update the image reference in devcontainer.json
          sed -i "s|ghcr.io/heimdall-sbom/heimdall-devcontainer:.*|ghcr.io/heimdall-sbom/heimdall-devcontainer:${{ github.event.inputs.image_tag }}|g" .devcontainer/devcontainer.json
          
          # Commit and push the changes
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .devcontainer/devcontainer.json
          git commit -m "Update devcontainer image reference to tag ${{ github.event.inputs.image_tag }}" || exit 0
          git push

      - name: Update container digests safely
        if: success() && env.REGISTRY == 'ghcr.io' && env.NAMESPACE == 'heimdall-sbom' && contains(env.DOCKER_IMAGE, 'heimdall-devcontainer')
        run: |
          echo "üîí Updating container digests for security..."
          
          # Wait a moment for the image to be fully available
          sleep 30
          
          # Make the script executable
          chmod +x .github/scripts/update-container-digests.sh
          
          # Run the digest update script
          if ./.github/scripts/update-container-digests.sh; then
            echo "‚úÖ Successfully updated container digests"
            
            # Configure git for committing digest files only (not workflow files)
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action [DevContainer Build]"
            
            # Only commit digest tracking files, not workflow files
            if git diff --name-only | grep -E "(container-digests\.json|SECURITY_DEPENDENCIES\.md)"; then
              echo "üìù Committing digest tracking updates..."
              git add .github/container-digests.json .github/SECURITY_DEPENDENCIES.md
              git commit -m "security(deps): update container digest tracking after devcontainer build

              - Updated container digest tracking files
              - Triggered by devcontainer build workflow
              - Manual workflow update required via patch file
              
              ü§ñ Auto-generated by build-devcontainer.yml"
              git push
              echo "‚úÖ Container digest tracking updated"
            else
              echo "‚ÑπÔ∏è No digest tracking updates needed"
            fi
            
            # Check if workflow patch was created
            if [ -f ".github/workflow-digest-update.patch" ]; then
              echo "üìã Workflow update patch created: .github/workflow-digest-update.patch"
              echo "‚ö†Ô∏è Manual workflow update required - apply the patch manually"
            fi
          else
            echo "‚ö†Ô∏è Failed to update container digests - manual update may be needed"
            exit 0  # Don't fail the build, just warn
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ DevContainer image built and pushed: \`${{ env.DOCKER_IMAGE }}\`
              
              ‚úÖ **Security Updates:**
              - Container digest tracking updated automatically
              - Security documentation updated with new digest
              - Workflow update patch created for manual review
              
              üìã **Next Steps:**
              - Review the generated patch file: \`.github/workflow-digest-update.patch\`
              - Apply the patch manually: \`patch -p1 < .github/workflow-digest-update.patch\`
              - Test the updated workflows before committing
              
              The devcontainer will now use the pre-built image instead of building locally.`
            })