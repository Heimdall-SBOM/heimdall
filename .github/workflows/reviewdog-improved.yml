name: reviewdog - clang-format and clang-tidy

on:
  pull_request:
    branches:
      - main

jobs:
  clang-tools:
    name: Clang Tools via Reviewdog
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install clang tools and reviewdog
        run: |
          sudo apt update
          sudo apt install -y clang-format clang-tidy cmake ninja-build curl
          curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b /usr/local/bin
          pip install PyYAML

      ############################################
      # 1. CLANG-FORMAT via reviewdog
      ############################################
      - name: Run clang-format with reviewdog
        run: |
          # Get changed files
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} | grep -E '\.(c|cpp|h|hpp)$' || true)
          else
            FILES=$(git diff --name-only HEAD~1..HEAD | grep -E '\.(c|cpp|h|hpp)$' || true)
          fi
          
          echo "Changed files: $FILES"
          if [ -n "$FILES" ]; then
            for file in $FILES; do
              if [ -f "$file" ]; then
                echo "Checking format for: $file"
                # Use github-pr-review reporter to post inline comments
                clang-format "$file" | diff -u "$file" - | reviewdog -f=diff -name="clang-format" -reporter=github-pr-review
              fi
            done
          else
            echo "No C++ files changed, skipping clang-format"
          fi
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      ############################################
      # 2. CLANG-TIDY via reviewdog
      ############################################
      - name: Run clang-tidy with reviewdog
        run: |
          # Build compile commands
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -S . -B build
          
          # Get changed files
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} | grep -E '\.(c|cpp|h|hpp)$' || true)
          else
            FILES=$(git diff --name-only HEAD~1..HEAD | grep -E '\.(c|cpp|h|hpp)$' || true)
          fi
          
          echo "Changed files for clang-tidy: $FILES"
          if [ -n "$FILES" ]; then
            for file in $FILES; do
              if [ -f "$file" ]; then
                echo "Running clang-tidy on: $file"
                # Use simpler error format and github-pr-review reporter for inline comments
                clang-tidy -p build "$file" 2>&1 | reviewdog -efm="%f:%l:%c: %tarning: %m" -efm="%f:%l:%c: %trror: %m" -efm="%f:%l:%c: %tote: %m" -name="clang-tidy" -reporter=github-pr-review -fail-level=any
              fi
            done
          else
            echo "No C++ files changed, skipping clang-tidy"
          fi
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}