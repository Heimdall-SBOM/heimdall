name: Line-by-Line Reviewdog Format Check  

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  line-format-check:
    name: Line Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt update
          sudo apt install -y clang-format
          curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b /usr/local/bin

      - name: Check formatting line by line
        run: |
          # Create formatted versions and compare line by line
          git diff --name-only ${{ github.event.pull_request.base.sha }} | grep -E '\.(c|cpp|h|hpp)$' | while read -r file; do
            if [ -f "$file" ]; then
              echo "Checking $file..."
              
              # Create formatted version
              FORMATTED=$(mktemp)
              clang-format "$file" > "$FORMATTED"
              
              # Compare and generate line-specific messages
              diff -u "$file" "$FORMATTED" | grep "^-.*=" | head -5 | while read -r line; do
                # Extract line content and create a reviewdog message
                LINE_NUM=$(grep -n "$(echo "$line" | sed 's/^-//')" "$file" | cut -d: -f1 | head -1)
                if [ -n "$LINE_NUM" ]; then
                  echo "$file:$LINE_NUM:1: warning: formatting issue - missing spaces around operators" | \
                  reviewdog -efm="%f:%l:%c: %tarning: %m" -name="format-line-$LINE_NUM" -reporter=github-pr-review -fail-on-error=false
                fi
              done
              
              rm -f "$FORMATTED"
            fi
          done
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}